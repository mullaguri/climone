drop table if exists role_permissions;drop table if exists user_roles;drop table if exists user;drop table if exists role;drop table if exists permission;drop table if exists hibernate_sequences;create table hibernate_sequences (  `sequence_name` varchar(255) not null,  `sequence_next_hi_value` int(11) not null  )engine=innodb default charset=utf8;create table permission ( 	name       	varchar(255) not null,	description	varchar(255) not null,	constraint pk_permission primary key (name)	)engine=innodb default charset=utf8;create table role_permissions ( 	role_id      	integer not null,	per_name     	varchar(255) not null,	constraint pk_role_perm primary key (role_id, per_name)	)engine=innodb default charset=utf8;create table role ( 	id         	integer auto_increment not null,	uid        	varchar(255) not null,	name       	varchar(255) null,	description	varchar(255) null,
	date_created datetime,
	last_modified datetime,
	version integer default 0,	constraint pk_role primary key (id)	)engine=innodb default charset=utf8;create table user_roles ( 	user_id      	integer not null,	role_id      	integer not null,	constraint pk_user_role primary key (user_id,role_id)	)engine=innodb default charset=utf8;create table user ( 	id        	integer auto_increment not null,	uid       	varchar(255) not null,	first_name	varchar(255) null,	last_name 	varchar(255) null,	username  	varchar(255) not null,	password  	varchar(255) not null,	email 		varchar(255) not null,
	date_created datetime,
	last_modified datetime,
	version integer default 0,	constraint pk_user primary key (id)	)engine=innodb default charset=utf8;alter table role_permissions	add constraint fk_role_perm_role foreign key (role_id) references role(id);alter table role_permissions	add constraint fk_role_perm_perm foreign key (per_name) references permission(name);alter table user_roles	add constraint fk_user_role_role foreign key (role_id) references role(id);alter table user_roles	add constraint fk_user_role_user foreign key (user_id) references user(id);insert into permission (name, description) values ("ADM_ROL","Administrar Roles");insert into permission (name, description) values ("ADM_PERM","Administrar Permisos");insert into permission (name, description) values ("ADM_USER","Administrar Usuarios");insert into role (id,uid,name,description,date_created,last_modified) values (1,"1","Administrador","Administrador del Sistema",now(),now());insert into role_permissions (role_id,per_name) values (1,"ADM_USER");insert into role_permissions (role_id,per_name) values (1,"ADM_ROL");insert into role_permissions (role_id,per_name) values (1,"ADM_PERM");-- la password es "password" --
insert into user (id,uid,first_name,last_name,username,password, email,date_created,last_modified) values (1,"1","Admin","Admin","admin","f087755d012bbf2509d279a63cdfa055", "admin@mail.com",now(),now());insert into user_roles (user_id,role_id) values (1,1);insert into hibernate_sequences (sequence_name, sequence_next_hi_value) values ('role',2);insert into hibernate_sequences (sequence_name, sequence_next_hi_value) values ('user',2);